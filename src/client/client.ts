/*
    Generated by Fivem Typescript Boilerplate by Whitigol#2122
*/

import { ConfigD } from "../../types/config";
import { ShowNotification } from "../shared/shared";

const Config: ConfigD = JSON.parse(
    LoadResourceFile(GetCurrentResourceName(), "config.json")
);

let state = false;

RegisterCommand(
    "cad",
    () => {
        toggleCad();
    },
    false
);

emit("chat:addSuggestion", "/cad", "Toggle the CAD");

function NUIMessage(data: any) {
    SendNuiMessage(JSON.stringify(data));
}

function toggleCad(newState?: boolean) {
    if (IsPedInAnyVehicle(PlayerPedId(), false)) {
        const vehSpeed = GetEntitySpeed(
            GetVehiclePedIsIn(PlayerPedId(), false)
        );
        if (vehSpeed > 0.0) {
            ShowNotification(
                "~r~Please stop your vehicle before opening the CAD."
            );
            return;
        }
    }
    newState ? (state = newState) : (state = !state);
    state ? SetNuiFocus(true, true) : SetNuiFocus(false, false);
    NUIMessage({
        type: "toggle",
        state,
        name: Config.cadName,
        link: Config.cadUrl,
    });
}

RegisterNuiCallback("close", () => {
    toggleCad(false);
});

RegisterCommand(
    "cad",
    () => {
        toggleCad();
    },
    false
);

RegisterKeyMapping("cad", "Toggle the CAD", "keyboard", ""); // Key mapping is blank by default

const delay = (ms: number) => new Promise((res) => setTimeout(res, ms));
